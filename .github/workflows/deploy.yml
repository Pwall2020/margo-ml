name: Margo-ML Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: margo-ml
  CONTAINER_NAME: margo-ml

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & Push image
        env:
          REGISTRY: ${{ steps.ecr.outputs.registry }}
          REPO: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPO:$IMAGE_TAG .
          docker push $REGISTRY/$REPO:$IMAGE_TAG
          echo "IMAGE_URI=$REGISTRY/$REPO:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Render task definition with new image
        id: render
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: .aws/ecs-taskdef-ml.json
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ env.IMAGE_URI }}

      - name:
          Preflight: verify ECS cluster & service exist
        run: |
          set -e
          if [ -z "${{ secrets.ECS_CLUSTER_NAME }}" ] || [ -z "${{ secrets.ECS_ML_SERVICE_NAME }}" ]; then
            echo "‚ùå ECS_CLUSTER_NAME or ECS_ML_SERVICE_NAME secret is missing."
            exit 1
          fi
          echo "Cluster: ${{ secrets.ECS_CLUSTER_NAME }}"
          echo "Service : ${{ secrets.ECS_ML_SERVICE_NAME }}"
          # List clusters & services (use names, not ARNs)
          aws ecs list-clusters --region $AWS_REGION
          aws ecs describe-services \
            --region $AWS_REGION \
            --cluster "${{ secrets.ECS_CLUSTER_NAME }}" \
            --services "${{ secrets.ECS_ML_SERVICE_NAME }}" \
            --query '{services: services[].{name:serviceName,status:status}, failures: failures}' \
            --output table

      - name: Deploy to ECS Service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.render.outputs.task-definition }}
          service: ${{ secrets.ECS_ML_SERVICE_NAME }}
          cluster: ${{ secrets.ECS_CLUSTER_NAME }}
          wait-for-service-stability: true
